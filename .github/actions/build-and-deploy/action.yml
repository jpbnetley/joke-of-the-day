name: Build and deploy

inputs:
  environment:
    description: Environment to deploy too
    required: true
    type: choice
    options:
      - development
      - production
  node_version: 
    type: string
    required: true
  VERCEL_ORG_ID:
    description: 'org id'
    required: true
  VERCEL_PROJECT_ID: 
    description: 'Project Id'
    required: true
  VERCEL_TOKEN: 
    description: 'The vercel token'
    required: true
  
outputs:
  buildStatus:
    description: if action was successful
    value: ${{ steps.success.outputs.buildStatus }}

runs:
  using: "composite"
  steps:
    - name: Install Vercel CLI
      run: pnpm i --global vercel@latest
      shell: bash
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=${{ inputs.environment }} --token=${{ inputs.VERCEL_TOKEN }}
      shell: bash

    - name: Build Project Artifacts
      run: vercel build ${{ inputs.environment == 'production' && '--prod' || ''  }} --token=${{ inputs.VERCEL_TOKEN }}
      shell: bash

    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt ${{ inputs.environment == 'production' && '--prod' || ''  }} --token=${{ inputs.VERCEL_TOKEN }}
      shell: bash

    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt ${{ inputs.environment == 'production' && '--prod' || ''  }} --token=${{ inputs.VERCEL_TOKEN }}
      shell: bash

    - id: success
      run: echo "buildStatus=success" >> $GITHUB_OUTPUT
      shell: bash